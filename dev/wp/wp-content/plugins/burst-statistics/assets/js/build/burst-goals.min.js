let viewportGoals=[],scrollListeners=new Map,burst_goals_setup=()=>{burst.goals.active=burst.goals.active.filter(e=>!e.url||e.url===window.location.pathname||"*"===e.url),burst.goals.active.forEach(e=>{("views"===e.type?burst_setup_viewport_tracker:burst_setup_click_tracker)(e)}),window.addEventListener("scroll",handle_viewport_scroll,!0)},ticking=!1,handle_viewport_scroll=()=>{ticking||(window.requestAnimationFrame(()=>{handle_viewport_goals(),ticking=!1}),ticking=!0)},handle_viewport_goals=()=>{[...viewportGoals].forEach(t=>{burst_is_element_in_viewport(t.element)&&(burst_goal_triggered(t.goal),viewportGoals=viewportGoals.filter(e=>e.goal.ID!==t.goal.ID),scrollListeners.has(t.goal.ID))&&(window.removeEventListener("scroll",scrollListeners.get(t.goal.ID),!0),scrollListeners.delete(t.goal.ID))})},burst_setup_viewport_tracker=r=>{r.selector.length&&document.querySelectorAll(r.selector).forEach(e=>{var t;burst_is_element_in_viewport(e)?burst_goal_triggered(r):(viewportGoals.push({element:e,goal:r}),t=()=>burst_listener_view(e,r),scrollListeners.set(r.ID,t),window.addEventListener("scroll",t,!0))})},is_element_truly_visible=e=>{for(;e;){var t=window.getComputedStyle(e);if("none"===t.display||"0"===t.opacity)return!1;e=e.parentElement}return!0},burst_is_element_in_viewport=e=>!!is_element_truly_visible(e)&&(e=e.getBoundingClientRect()).top<window.innerHeight&&0<e.bottom,burst_listener_view=(e,t)=>{burst_is_element_in_viewport(e)&&(burst_goal_triggered(t),scrollListeners.has(t.ID)&&(window.removeEventListener("scroll",scrollListeners.get(t.ID),!0),scrollListeners.delete(t.ID)),viewportGoals=viewportGoals.filter(e=>e.goal.ID!==t.ID))},burst_setup_click_tracker=t=>{t.selector.length&&document.body.addEventListener("click",e=>{e.target.closest(t.selector)&&burst_goal_triggered(t)})},handle_burst_message_goal=t=>{burst.goals.active.forEach(e=>{e.type===t.type&&e.selector===t.selector&&burst_goal_triggered(e)})},burst_goal_triggered=(window.addEventListener("message",e=>{e.data&&e.data.type&&e.data.selector&&handle_burst_message_goal(e.data)}),e=>{let t=parseInt(e.ID,10);burst.goals.completed.includes(t)||(burst.goals.completed.push(t),viewportGoals=viewportGoals.filter(e=>parseInt(e.goal.ID,10)!==t)),burst_update_hit(!1,!0)});export default()=>{burst_goals_setup()};